.clearfix:after,.site-header:after,.site-footer:after{visibility:hidden;display:block;font-size:0;content:" ";clear:both;height:0}.clearfix,.site-header,.site-footer{display:inline-block}* html .clearfix,* html .site-header,* html .site-footer{height:1%}.clearfix,.site-header,.site-footer{display:block}*,*:before,*:after,*::before,*::after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:transparent}body{margin:0;padding:0}iframe{border:0}h1,h2,h3,h4,h5,p,ul,ol,figure,button{margin:0;padding:0}ul,ol{list-style-position:inside;margin-bottom:1.5em}nav ul,nav ol{margin-bottom:0}li{display:list-item}h1,h2,h3,h4,h5,p{font-size:inherit}strong{font-weight:bold}sup{position:relative;top:-.5em;font-size:65%;line-height:0;vertical-align:baseline}a,button{color:inherit}a{text-decoration:none;background-color:transparent}button{overflow:visible;border:0;font:inherit;letter-spacing:inherit;background:none;cursor:pointer;-webkit-font-smoothing:inherit}button:focus{outline:0}::-moz-focus-inner{padding:0;border:0}img{max-width:100%;height:auto;border:0}svg{width:100%;height:auto}svg:not(:root){overflow:hidden}pre{overflow:auto}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:none}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}body{background:#e3d6ce}a{color:#2370E6}.color-grey0{color:#282C34}.color-grey1{color:#3E4451}.color-grey2{color:#5C6370}.color-grey3{color:#ABB2BF}.color-lightgrey{color:#EBEBFF}.color-lightbeige{color:#e3d6ce}.color-beige{color:#C8AE9D}.color-lightyellow{color:#E5C07B}.color-darkyellow{color:#D19A66}.color-pink{color:#E06C75}.color-orange{color:#DD672C}.color-red{color:#BE5046}.color-blue{color:#528BFF}.color-darkblue{color:#2370E6}.color-green{color:#56B6C2}.bg-color-grey0{background-color:#282C34}.bg-color-grey1{background-color:#3E4451}.bg-color-grey2{background-color:#5C6370}.bg-color-grey3{background-color:#ABB2BF}.bg-color-lightgrey{background-color:#EBEBFF}.bg-color-lightbeige{background-color:#e3d6ce}.bg-color-beige{background-color:#C8AE9D}.bg-color-lightyellow{background-color:#E5C07B}.bg-color-darkyellow{background-color:#D19A66}.bg-color-pink{background-color:#E06C75}.bg-color-orange{background-color:#DD672C}.bg-color-red{background-color:#BE5046}.bg-color-blue{background-color:#528BFF}.bg-color-darkblue{background-color:#2370E6}.bg-color-green{background-color:#56B6C2}.hljs-meta,.hljs-tag,.hljs-function,.hljs-params,.hljs-comment{color:#ABB2BF}.hljs-name,.hljs-regexp{color:#E06C75}.hljs-attr,.hljs-number,.hljs-literal{color:#D19A66}.hljs-string{color:#C8AE9D}.hljs-keyword{color:#DD672C}.hljs-built_in{color:#56B6C2}.hljs .javascript .hljs-attr{color:#ABB2BF}.hljs-selector-tag{color:#E06C75}.hljs-selector-class{color:#D19A66}.hljs-selector-id{color:#EBEBFF}.hljs.css .hljs-attribute{color:#56B6C2}.hljs.css .hljs-number,.hljs.css .hljs-literal{color:#D19A66}pre{box-shadow:0 0 5px rgba(40,44,52,0.5)}pre code{background:#282C34;border:0.5em solid #3E4451;color:#EBEBFF;display:block;font-family:Menlo, Monaco, Consolas, monospace;font-size:65%;line-height:1.5em;padding:1em;width:100%;overflow-y:scroll}/*!
Typeplate : Starter Kit
URL ........... http://typeplate.com
Version ....... 3.0.2
Github ........ https://github.com/typeplate/starter-kit
Authors ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)
License ....... Creative Commmons Attribution 3.0
License URL ... https://github.com/typeplate/starter-kit/blob/master/license.txt
*/@font-face{font-family:"Ampersand";src:local("Georgia"),local("Garamond"),local("Palatino"),local("Book Antiqua");unicode-range:U+0026}@font-face{font-family:"Ampersand";src:local("Georgia");unicode-range:U+270C}.typl8-tera,.typl8-giga,.typl8-mega,h1,.h1,.typl8-alpha,h2,.h2,.typl8-beta,h3,.h3,.typl8-gamma,h4,.h4,.site-header__title,.typl8-delta,h5,.h5,.typl8-epsilon,.typl8-zeta,h6,.h6{text-rendering:optimizeLegibility;line-height:1;margin-top:0;color:#282C34}blockquote+figcaption cite{display:block;font-size:inherit;text-align:right}body{word-wrap:break-word}pre code{word-wrap:normal}html{font:normal 112.5%/1.3 "adelle",serif}body{-webkit-hyphens:auto;-moz-hyphens:auto;-ms-hyphens:auto;hyphens:auto;color:#3E4451}.typl8-tera{font-size:6.5em;margin-bottom:5rem}.typl8-giga{font-size:5em;margin-bottom:3.84615rem}.typl8-mega,h1,.h1{font-size:4em;margin-bottom:3.07692rem}.typl8-alpha,h2,.h2{font-size:3.33333em;margin-bottom:2.5641rem}.typl8-beta,h3,.h3{font-size:2.66667em;margin-bottom:2.05128rem}.typl8-gamma,h4,.h4,.site-header__title{font-size:2em;margin-bottom:1.53846rem}.typl8-delta,h5,.h5{font-size:1.33333em;margin-bottom:1.02564rem}.typl8-epsilon{font-size:1.16667em;margin-bottom:.89744rem}.typl8-zeta,h6,.h6{font-size:1em;margin-bottom:.76923rem}p{margin:auto auto 1.5rem}p+p{text-indent:1.5rem;margin-top:-1.5rem}small{font-size:65%}input,abbr,acronym,blockquote,code,kbd,q,samp,var{-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre{white-space:pre}pre code{white-space:-moz-pre-wrap;white-space:pre-wrap}code{white-space:pre;font-family:monospace}abbr{-webkit-font-variant:small-caps;-moz-font-variant:small-caps;-ms-font-variant:small-caps;font-variant:small-caps;font-weight:600;text-transform:lowercase;color:gray}abbr[title]:hover{cursor:help}.typl8-drop-cap:first-letter{float:left;margin:10px 10px 0 0;padding:0 20px;font-size:4em;font-family:inherit;line-height:1;text-indent:0;background:transparent;color:inherit}p+.typl8-drop-cap{text-indent:0;margin-top:0}.typl8-lining dt,.typl8-lining dd{display:inline;margin:0}.typl8-lining dt+dt:before,.typl8-lining dd+dt:before{content:"\A";white-space:pre}.typl8-lining dd+dd:before{content:", "}.typl8-lining dd:before{content:": ";margin-left:-0.2rem}.typl8-dictionary-style dt{display:inline;counter-reset:definitions}.typl8-dictionary-style dt+dt:before{content:", ";margin-left:-0.2rem}.typl8-dictionary-style dd{display:block;counter-increment:definitions}.typl8-dictionary-style dd:before{content:counter(definitions, decimal) ". "}.typl8-pull-quote{position:relative;padding:1em}.typl8-pull-quote:before,.typl8-pull-quote:after{height:1em;opacity:.5;position:absolute;font-size:4em;color:#dc976e}.typl8-pull-quote:before{content:'“';top:0;left:0}.typl8-pull-quote:after{content:'”';bottom:0;right:0}h1,h2,h3,h4,h5,h6{font-family:'adelle-sans', sans-serif}figure{background-color:rgba(171,178,191,0.25);color:#3E4451;margin-bottom:1.5rem}blockquote{margin:0 1em}figure p,aside p{font-style:italic;margin-bottom:0}figure blockquote{display:block;padding:1em 0 0 0}figcaption{color:#5C6370;font-size:0.65em;font-style:italic;font-weight:200;padding:0.5em 1rem 1rem 0;text-align:center}aside{background-color:rgba(171,178,191,0.25);margin-bottom:1.5em}.typl8-pull-quote:before{left:0.05em}.typl8-pull-quote:after{right:0.05em;bottom:-0.25em}.typl8-pull-quote:before,.typl8-pull-quote:after{color:#D19A66}article .foot-note{font-size:0.65em;padding:0 1.3em}html{height:100%}body{min-height:100%;display:flex;flex-direction:column}main{flex:1;margin:0 auto;padding:1em;width:100%;max-width:36em}main img{width:100%}input{background-color:#5C6370;border:none;font-family:'adelle', serif;font-size:1em;margin:0;outline:0;padding:0;-webkit-appearance:none}.hamburger{height:2.66667em;position:relative;width:3em}.hamburger:hover div{background-color:#DD672C}.hamburger__top,.hamburger__middle,.hamburger__bottom{background-color:#E5C07B;height:10%;position:absolute;width:100%}.hamburger__top{top:0}.hamburger__middle{top:45%}.hamburger__bottom{top:90%}.site-header{background-color:#3E4451}.site-header__title{color:#D19A66;float:left;font-family:'futura-pt', sans-serif;font-weight:700;margin:1rem 0 0 1rem;padding-top:0.2em}@media screen and (min-width: 400px){.site-header__title{font-size:2.6667rem;padding-top:0}}.site-header__menu-trigger{float:right;margin:1rem 1rem 0 0}.site-header__search{clear:both;margin-top:1em;padding:1.25em 1em}.site-header__search__input{height:2em;text-align:center;width:100%}.site-footer{background-color:#282C34;color:#5C6370;padding:1em}.site-footer__copyright{text-align:center}

/*# sourceMappingURL=data:application/json;base64, */
